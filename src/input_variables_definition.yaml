## Definitions of the input variables
##inputvar: #name of the variable as declared in the code
## DESCRIPTION: Extended description of the variable to be used for documentation
## COMMENT: This is the description of the variable as will appear in the logfile
## RANGE: [from,to] #always put two numbers (also .inf can be put)
## EXCLUSIVE: #here follows a mapping of allowed values (either RANGE or EXCLUSIVE)
##  Value1:  comments of value1
##  Value2:  comment of value2
## CONDITION: #here the conditions for which the variable makes sense are written
##   MASTER_KEY: foo #this means that inputvar makes sense only if foo is specified
##   WHEN: #provide a list of allowed values of foo for which inputvar is meaningful
##     - fooval1
##     - fooval2
## PROFILE_FROM: foo #inputvar inherit the profile from the one specified by foo variable
###then the profiles follows, which gives to the variables the allowed name
## default: value of the default, written as a string
## profile1: value1 # if the user specifies inputvar: profile1 then inputvars will be value1
## profile2: value2
##
## DO NOT USE the character ':' and "" in the COMMENT or DESCRIPTION
############################################
# Density Functional Theory parameters
 dft:
   DESCRIPTION: |
     Defines all the parameters required for a single wavefunction calculation.
   hgrids:
     COMMENT: Grid spacing in the three directions (bohr)
     DESCRIPTION: |
      Grid spacing in three directions (Bohr units) of the coarse mesh as [0.5, 0.45, 0.4].
      A scalar can also be given as 0.45.
      The grid spacing of the Cartesian grid, in Bohr.
      As described in the wavelet formalism section, the nodes of this grid serve as the centers for the scaling
      function/wavelet basis.
      Values are in most cases between 0.3 and 0.6 bohr.
     RANGE: [0., 4.]
     default: [0.45, 0.45, 0.45]
     #fast: [0.55, 0.55, 0.55]
     #accurate: [0.30, 0.30, 0.30]
   ngrids:
     COMMENT: Number of grid spacing division in each direction
     DESCRIPTION: |
       Number of grid spacing division in each direction. Values are
       relevant only for periodic directions. This is convenient to keep
       the constant the number of wavelets when changing the super-cell dimensions.
       These values override hgrid ones.
     RANGE: [0, 1000]
     default: [0, 0, 0]
     auto: [0, 0, 0]
   rmult:
     COMMENT: c(f)rmult*radii_cf(:,1(2))=coarse(fine) atom-based radius
     DESCRIPTION: Coarse and fine multiplier as [4.0, 8.0].
                 These numbers determine the extension of the coarse and fine region respectively.
     RANGE: [0., 20.]
     default: [5., 8.]
   ixc:
     COMMENT: Exchange-correlation parameter (LDA=1,PBE=11)
     DESCRIPTION: |
       Determine the exchange-correlation functional.
       Integer specifying which exchange correlation functional will be used.
       The Abinit conventions are used and detailed information can be found on the Abinit Web page.
       Here is only a short summary of some widely used functionals

       - Pade LDA from Abinit XC library;
       - PBE from Abinit XC library;
       - Pade LDA from libXC;
       - PBE from libXC;
       - PBEsol from libXC;
       - PBE0 Hybrid functional (local part from libXC).

       A positive integer refers to a functional from ABINIT library and a negative one from libXC library.
       In this case, you concatenate the codes for the exchange part and for the correlation part (see the table of codes).
     default: 1
     #Here follow a number of possibilities for the different XC functionals
     LDA (ABINIT): 1
     PBE (ABINIT): 11
     LDA: -20
     PBE: -101130
     PBE0: -406
     B97-D: -170 #to be verified
     B3LYP: -402
     HF: 100 #Hartree-Fock
     NONE: 1000 #No Hartree and No XC (useful for H atom)
   qcharge:
     COMMENT: Charge of the system. Can be integer or real.
     DESCRIPTION: |
      Total charge of the system.
      A positive qcharge means that electrons are taken away and a negative one means that extra electrons are added.
     RANGE: [-500., 500.]
     default: 0
   elecfield:
     COMMENT: Electric field (Ex,Ey,Ez)
     DESCRIPTION: |
      Uniform electric field Ex, Ey, Ez in units of Ha/Bohr.
      The electric field can not have components in periodic directions, e.g. Ex = Ez = 0 in case surface BC is used.
     default: [0., 0., 0.]
   nspin:
     COMMENT: Spin polarization treatment
     DESCRIPTION: |
            Spin polarization treatment;
            1 no spin (as LDA),
            2 spin-polarisation (LSD or collinear) and
            4 non-collinear i.e. two components per electron.
     EXCLUSIVE:
       1: No spin
       2: Collinear
       4: Non-collinear
     default: 1
   mpol:
     COMMENT: Total magnetic moment
     DESCRIPTION: |
       Total magnetic moment which has to be the same parity as the total number of electrons (nelec_up-nelec_down=mpol).
       You should also define the keyword 'IGSpin' or add a spin per atom to specify the polarisation for the input guess.
     default: 0
   gnrm_cv:
     COMMENT: Convergence criterion gradient
     DESCRIPTION: |
       Convergence criterion for the wavefunction optimization (norm of the gradient).
       Reasonable values are in most cases between 1.d-4 and 1.d-5.
     RANGE: [1.e-20, 1.]
     default: 1.e-4
     fast: 1.e-3
     accurate: 1.e-5
   itermax:
     COMMENT: Max. iterations of wfn. opt. steps
     DESCRIPTION: >
       Maximum number of gradient evaluations for a single cycle in a wavefunction optimization and maximum number of
       cycles. At the end of each cycle a subspace diagonalization is done which helps in cases where one has near
       degeneracy between the HOMO and LUMO orbitals. 50 are usually sufficient.
     RANGE: [0, 10000]
     default: 50
   itermin:
     COMMENT: Minimal iterations of wfn. optimized steps
     RANGE: [0, 10000]
     default: 0
   nrepmax:
     COMMENT: Max. number of re-diag. runs
     DESCRIPTION: >
       Maximum number of gradient evaluations for a single cycle in a wavefunction optimization and maximum number of
       cycles. At the end of each cycle a subspace diagonalization is done which helps in cases where one has near
       degeneracy between the HOMO and LUMO orbitals. 50 are usually sufficient.
     RANGE: [0, 1000]
     default: 1
     accurate: 10
   ncong:
     COMMENT: No. of CG it. for preconditioning eq.
     DESCRIPTION: |
       ncong gives the number of iterations in the solution of the preconditioning equation. For free boundary
       conditions 5 is a good value whereas for other boundary condition a value from 0 to 2 is in general sufficient.

       Large values of ncong lead to a smaller number of iterations in the wavefunction optimization and better
       forces, but each iteration is more costly.
       So an optimal compromise value has to be found.
     RANGE: [0, 20]
     default: 6
   idsx:
     COMMENT: Wfn. diis history
     DESCRIPTION: |
       idsx gives the history length of the DIIS convergence
       acceleration in the wavefunction optimization. 6 is usually a good value for fast convergence.

       In case of convergence problems it can be advantageous to switch off DIIS by setting idsx = 0. The memory
       requirements grow considerably with large values of idsx.

       If memory is the limiting factor one has to choose idsx smaller than the value which gives the fastest
       convergence.
       The bigdft-tool tool can be used to predict the memory requirements for different choices of idsx.
     RANGE: [0, 15]
     default: 6
     low_memory: 2
   dispersion:
     COMMENT: Dispersion correction potential (values 1,2,3,4,5), 0=none
     DESCRIPTION: |
       A non-zero values activates an empirical add-on treatment of dispersion effects.

       The values 1, 2 and 3 specify different switching on functions using the convention.
     RANGE: [0, 5]
     default: 0
   inputpsiid:
     COMMENT: Input guess wavefunctions
     DESCRIPTION: |
       Specifies how the input guess wavefunction is generated
       - -2 Random numbers are used as input guess.
       his is of course a poor input guess which will need many iterations of the wavefunction optimization
       and might even lead to divergences.

        - -1 The input wavefunction is imported from the CP2K code which uses Gaussian functions.
        The basis set should be contained in a file named gaubasis.dat whereas the coefficients should appear
        in the gaucoeff.dat file. Both files are the output files of CP2K code. See the H2O-CP2K test for an example.

        - 0 A subspace diagonalization in a minimal atomic basis set is used. This input guess should be
        used in general if one starts a new calculation.

        - 1 The previously calculated wavefunctions (for instance from the previous geometry optimization step)
        are used as input guess. Setting InputPsiId to this value does only make sense from within a main program
        where call_cluster() subroutine was called previously. The old wavefunction is passed to the new call via the
        data structure restart.

        - 2 The input wavefunction is read from the wavefunction. files which contain all the scaling
        function and wavelet coefficients. In case some parameters such as hgrids or crmult have changed, compared to
        the previous run, the wavefunctions will be also transformed to the new parameter set. Use also this value to
        restart from ETSF file format wavefunction-etsf.nc.

        - 10 The same as 0 but activates the ’Gaussian help’ after convergence the wavefunctions are projected
        onto the localised basis set used for the input guess, and Mulliken Charge Population Analysis (MCPA) is performed on
        this basis. The user has the possibility to perform MCPA with separate basis set (functionality to be added).

        - 11 Restart with Gaussian approximation contained in the ’restart’ data structure.

        - 12 The input wavefunction is read from the wavefunctions.gau file, which contains an approximation in
        a minimal Gaussian basis set of the previously calculated wavefunctions.

        - 100 Use Linear Atomic Orbitals

        - 101 Restart for Linear

        - 102 Linear on disk
     default: 0
     EXCLUSIVE:
       -1000: Empty
       -2:    Random
       -1:    CP2K
       0:     LCAO
       1:     Wvl. in memory
       2:     Wvl. on disk
       3:     Plane-waves on disk
       10:    LCAO + gauss.
       11:    Gauss. in memory
       12:    Gauss. on disk
       100:   Linear AO
       101:   Linear restart
       102:   Linear on disk
     #Useful shortcuts
     LCAO: 0
     RANDOM: -2
     #Here follow two shortcuts for linear
     linear: 100
     linear_restart: 102
   projection:
     COMMENT: Projector construction method
     DESCRIPTION: |
       Specifies how the projectors are expressed in Daubechies from atomic description
     default: gaussian
     EXCLUSIVE:
       gaussian: tensor product of 1D separable gaussians
       radial: real space collocation of radial functions
       radial+mp: as radial, but using multipole preserving techniques
  #  output_wf:
  #    COMMENT: Output of the support functions
  #    DESCRIPTION: |
  #      controls the output of wavefunctions on disk at the end of the calculation
   #
  #         - output_wf = 0, Do not write the wavefunctions to disk.
   #
  #         - output_wf = 1, The output wavefunctions are written at the end of the wavefunction optimization into
  #         plain text files. If InputPsiId was greater than 10 the wavefunction will be written in the Gaussian
  #         approximation into a single wavefunctions.gau file otherwise into wavefunction. files. Writing a
  #         wavefunction. file for each orbital can take a considerable amount of time and disk space.
   #
  #         - output_wf = 2, The output wavefunctions are written at the end of the wavefunction optimization into
  #         Fortran binary files. This format is not portable between compilers and machines.
   #
  #         - output_wf = 3, The output wavefunctions are written at the end of the wavefunction optimization into
  #         ETSF binary files. This format is portable between compilers and machines since based on NetCDF. Parallel
  #         IO are taken into account.
  #    default: 0
  #    EXCLUSIVE:
  #      0: None
  #      1: Wavelet, Plain text
  #      2: Wavelet, Fortran binary
  #      3: Wavelet, ETSF file format
  #      #10: None
  #      #11: Wavelet and Interpolating Scaling Function, Plain text
  #      #12: Wavelet and Interpolating Scaling Function, Fortran binary
  #      #13: Wavelet and Interpolating Scaling Function, ETSF file format
  #      #20: None
  #      #21: Wavelet and Interpolating Scaling Function (wavefunction), Plain text
  #      #22: Wavelet and Interpolating Scaling Function (wavefunction), Fortran binary
  #      #23: Wavelet and Interpolating Scaling Function (wavefunction), ETSF file format
   output_denspot:
     COMMENT: Output of the density or the potential
     DESCRIPTION: |
       controls the output of density and pontentials on disk at the end of the calculation

       - output_denspot = 0, No output density is written.

       - output_denspot = 1, Output electronic density is written in the .pot format of V_Sim into the file
       electronic_density.pot (deprecated, use 11 instead).

       - output_denspot = 2, In addition to the electronic density, the potential (local_potential.pot) and its
       components (external_potential.pot and Hartree_potential.pot) are also output in plain text .pot
       files (deprecated, use 12 instead).

       - output_denspot = 11, Same as output_denspot = 1, but files are written in ETSF file format
       (portable binary format based on NetCDF).

       - output_denspot = 12, Same as output_denspot = 2, but files are written in ETSF file format
       (portable binary format based on NetCDF).

       - output_denspot = 21, Same as output_denspot = 1, but files are written in .cube file format
       (plain text).

       - output_denspot = 22, Same as output_denspot = 2, but files are written in .cube file format
       (plain text).
     default: 0
     EXCLUSIVE:
       0:  None
       1:  Density in plain text
       2:  Density and potentials in plain text
       11: Density in ETSF file format
       12: Density and potentials in ETSF file format
       21: Density in cube file format
       22: Density and potentials in cube file format
   rbuf:
     COMMENT: Length of the tail (AU)
     description: |
       Far reaching tails of the wavefunctions decaying into the vacuum are added in a perturbative treatment if
       the variable rbuf is set to a strictly positive value.
       This allows to do a calculation with some moderate value of crmult and then to extrapolate to the limit of
       large crmult. This procedure is not variational and gives too low energies.

       The true energy is in between the two energies and in general much closer to the extrapolated energy.

       This procedure can also be used to judge whether the chosen value of crmult is large enough for a certain
       required precision. rbuf gives the amount by which the radii for the coarse resolution region are increased
       in atomic units. ncongt gives the number of iterations used in the perturbation calculation.

       Reasonable values for ncongt are around 30.
     RANGE: [0., 10.]
     default: 0.
     #Here shortcut
     with tails: 5.
   ncongt:
     COMMENT: No. of tail CG iterations
     DESCRIPTION: |
       Far reaching tails of the wavefunctions decaying into the vacuum are added in a perturbative treatment if
       the variable rbuf is set to a strictly positive value.
       This allows to do a calculation with some moderate value of crmult and then to extrapolate to the limit of
       large crmult. This procedure is not variational and gives too low energies.

       The true energy is in between the two energies and in general much closer to the extrapolated energy.

       This procedure can also be used to judge whether the chosen value of crmult is large enough for a certain
       required precision. rbuf gives the amount by which the radii for the coarse resolution region are increased
       in atomic units. ncongt gives the number of iterations used in the perturbation calculation.

       Reasonable values for ncongt are around 30.
     RANGE: [0, 50]
     default: 30
   norbv:
     COMMENT: Davidson subspace dimension (No. virtual orbitals)
     DESCRIPTION: |
        Determine the dimension of the subspace i.e. the number of virtual orbitals
        to calculate via a Davidson diagonalisation.
        Usually unoccupied orbitals are not calculated since they are not needed for the total energy and other
        physical properties of the electronic ground state.

        Putting norbv to a non-zero value will result in the calculation of norbv virtual orbitals in a postprocessing
        routine after the occupied orbitals have been calculated, which uses Davidson iterative treatment.
        nvirt (< norbv) determines to the number of converged orbitals during the convergence process which is taking
        care of during the Davidson iterations.
        nplot of these orbitals will be written in the virtual.*.pot files and nplot (if that many exist) of the highest
        occupied orbitals will be written in the orbital.*.pot file. The Kohn Sham eigenvalues are written in the
        ordinary output file.
     RANGE: [-9999, 9999]
     default: 0
   nvirt:
     COMMENT: No. of converged virtual orbs (< norbv)
     DESCRIPTION: |
        Determine the dimension of the subspace i.e. the number of virtual orbitals
        to be converged via a Davidson diagonalisation. (should be < norbv)
        Usually unoccupied orbitals are not calculated since they are not needed for the total energy and other
        physical properties of the electronic ground state.

        Putting norbv to a non-zero value will result in the calculation of norbv virtual orbitals in a postprocessing
        routine after the occupied orbitals have been calculated, which uses Davidson iterative treatment.
        nvirt (< norbv) determines to the number of converged orbitals during the convergence process which is taking
        care of during the Davidson iterations.
        nplot of these orbitals will be written in the virtual.*.pot files and nplot (if that many exist) of the highest
        occupied orbitals will be written in the orbital.*.pot file. The Kohn Sham eigenvalues are written in the
        ordinary output file.
     RANGE: [0, 9999]
     default: 0
   nplot:
     COMMENT: No. of plotted orbs
     DESCRIPTION: |
        Number of orbitals to be plotted

        Determine the dimension of the subspace i.e. the number of virtual orbitals
        to calculate via a Davidson diagonalisation.

        Usually unoccupied orbitals are not calculated since they are not needed for the total energy and other
        physical properties of the electronic ground state.

        Putting norbv to a non-zero value will result in the calculation of norbv virtual orbitals in a postprocessing
        routine after the occupied orbitals have been calculated, which uses Davidson iterative treatment . nplot
        of these orbitals will be written in the virtual.*.pot files and nplot (if that many exist) of the highest
        occupied orbitals will be written in the orbital.*.pot file The Kohn Sham eigenvalues are written in the
        ordinary output file. nvirt corresponds to the actual number of orbitals the convergence process is taking
        care of during the Davidson iterations.
     RANGE: [0, 9999]
     default: 0
   gnrm_cv_virt:
     COMMENT: Convergence criterion gradient for virtual orbitals
     DESCRIPTION: |
       Norm of the gradient for virtual orbitals convergence.
       Calculates the results on the first nvirt orbitals
     RANGE: [1.e-20, 1.]
     default: 1.e-4
     fast: 1.e-3
     accurate: 1.e-5
   itermax_virt:
     COMMENT: Max. iterations of wfn. opt. steps for virtual orbitals
     DESCRIPTION: |
       Maximum number of gradient evaluations for a cycle of a wavefunction optimization
       for the virtual orbitals.
     RANGE: [0, 10000]
     default: 50
   disablesym:
     COMMENT: Disable the symmetry detection
     DESCRIPTION: |
       Disable the symmetry detection (by default No except for isolated systems).

       By default symmetries are used to update the density in periodic boundary condition calculations, and surface
       boundary conditions also.
     default: No
   #   solvent:
   #     COMMENT: Electrostatic environment for Poisson Equation
   #     DESCRIPTION: Define the method to set the dielectric function as a function of the position
   #     EXCLUSIVE:
   #       vacuum: No Solvent method, ordinary Poisson Equation
   #       rigid:  Rigid (smoothed) cavity around the atoms, given as superposition of spheres
   #       sccs: Self-Consistent Continuum Solvation (accordig to the model of Andreussi et. al JCP 136, 064102 (2012)
   #     default: vacuum
   external_potential:
     COMMENT: Multipole moments of an external potential
     DESCRIPTION: Give the multipole moments up to quadrupoles
     default: 0.0
   calculate_strten:
     COMMENT: Boolean to activate the calculation of the stress tensor. Might be set to No for performance reasons
     DESCRIPTION: |
      In some cases, for example when doing MD for fixed volume systems, it might be useful to disable the
      calculation of the stress tensor, to save computational time.
     default: Yes
   magnetic_torque:
     COMMENT: Boolean to activate the calculation of the direction of the atomic magnetization which lowers the total energy
     default: No
     CONDITION:
       MASTER_KEY: nspin
       WHEN:
       - 4
   spin_dynamics:
     COMMENT: Boolean to activate the calculation of the direction of the atomic magnetization which lowers the total energy
     default: No
     CONDITION:
       MASTER_KEY: magnetic_torque
       WHEN:
       - Yes
   plot_mppot_axes:
     COMMENT: Plot the potential generated by the multipoles along axes through this point. Negative values mean no plot.
     DESCRIPTION: |
      If present, the potential generated by the multipoles will be written in the .cube format and also be plotted
      along axes through the specified point. If no plot is desired, the values should be negative.
     default: [-1,-1,-1]
   plot_pot_axes:
     COMMENT: Plot the potential along axes through this point. Negative values mean no plot.
     DESCRIPTION: |
      If present and the chosen plotting format is .cube, the potential will be written in the .cube format and also be plotted
      along axes through the specified point. If no plot is desired, the values should be negative.
     default: [-1,-1,-1]
     #CONDITION:
     #  MASTER_KEY: output_denspot
     #  WHEN:
     #  - 22
   occupancy_control:
    COMMENT: Dictionary of the atomic matrices to be applied for a given iteration number
    DESCRIPTION: |
     The atomic species or the atoms written as Atom No are specified, followed by a dictionary
     of the shells for which the density matrix can be controlled. The Value of the matrix can be specified either as
     a trace or as explicit matrix elements.
    default: None
   itermax_occ_ctrl:
     COMMENT: Number of iterations of occupancy control scheme. Should be between itermin and itermax
     default: 0
   nrepmax_occ_ctrl:
     COMMENT: Number of re-diagonalizations of occupancy control scheme.
     default: 1
   alpha_hf:
     COMMENT: Part of the exact exchange contribution for hybrid functionals
     DESCRIPTION: |
       By default .25 for PBE0, and .2 for B3LYP
     RANGE: [0.0,1.0]
     default: -1.0
#output parameters, decide what to dump of write to file
 output:
  DESCRIPTION: Output parameters, control the information that will be printed out
  verbosity:
    COMMENT: Verbosity of the output
    EXCLUSIVE:
      0: Very low
      1: Low
      2: Medium
      3: High
    default: 2
  atomic_density_matrix:
    COMMENT: Dictionary of the atoms for which the atomic density matrix has to be plotted
    DESCRIPTION: |
     The atomic species or the atoms written as Atom No are specified, followed by a list
     of the shells for which the density matrix can be plotted
    default: None
  sdos:
    COMMENT: Spatially-resolved density of states
    DESCRIPTION: |
     Plots the density of states by calculating the value of psi*Hpsi per each KS orbital,
     resolved among x,y or z.
    default: No
  orbitals:
    COMMENT: Write KS orbitals in the full simulation domain (might take lot of disk space!)
    default: No
    EXCLUSIVE:
       No: No output
       text: Output in wavelet basis
       binary: Binary file output
       text_with_densities: In addition output wavefunction densities in interpolating scaling functions (cube file)
       text_with_cube: In addition output wavefunctions in interpolating scaling functions (cube file)
       etsf: ETSF file format
  outputpsiid:
    COMMENT: basename of the output wavefunctions files written in the data directory
    default: wavefunction
    DESCRIPTION: |
      Define the basename of all the files associated to the output of the wavefunctions.
      Can be reused in the inputpsiid input parameter.

  #potentials:
  #  format: CUBE
  #  frequence: iteration, SCF

#K points parameters
 kpt:
   DESCRIPTION: K points defined in the Brillouin zone for periodic system calculations
   method:
     COMMENT: K-point sampling method
     EXCLUSIVE:
       auto:   Based on kptrlen
       mpgrid: Monkhorst-Pack
       manual: Based on raw coordinates
     default:  manual
   kptrlen:
     COMMENT: Equivalent length of K-space resolution (Bohr)
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - auto
     RANGE: [0, 1e4]
     default: 0.
   ngkpt:
     COMMENT: No. of Monkhorst-Pack grid points
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - mpgrid
     RANGE: [1, 10000]
     default: [1, 1, 1]
   shiftk:
     COMMENT: Grid shifts
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - mpgrid
     default: [[0., 0., 0.]]
   kpt:
     COMMENT: Kpt coordinates
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - manual
     default:
     -  [0., 0., 0.]
   wkpt:
     COMMENT: Kpt weights
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - manual
     RANGE: [0., 1e4]
     default:
     - 1.
   bands:
     COMMENT: For doing band structure calculation
     default: No
   iseg:
     COMMENT: Points for each segment of the Brillouin zone path
     CONDITION:
       MASTER_KEY: bands
       WHEN:
       - Yes
     default:
     - 1
   kptv:
     COMMENT: K points defining each segment of the Brillouin zone path
     CONDITION:
       MASTER_KEY: bands
       WHEN:
       - Yes
     default:
     -  [0., 0., 0.]
     -  [0.5, 0.5, 0.5]
   ngranularity:
     COMMENT: No. of points done for each group
     CONDITION:
       MASTER_KEY: bands
       WHEN:
       - Yes
     RANGE: [1, 1000]
     default: 1
   band_structure_filename:
     COMMENT: Filename given the local potential for band structure calculations
     CONDITION:
       MASTER_KEY: bands
       WHEN:
       - Yes
     default: ''

#Geometry Optimisation  and ABINIT Molecular Dynamics parameters
 geopt:
   DESCRIPTION: |
          This character string specifies the method used for the geometry optimization.

          - VSSD Variable Stepsize Steepest Descent method.

          - SDCG A combination of Steepest Descent and Conjugate Gradient.

          - LBFGS Limited Memory BFGS.

     #    - BFGS Preconditioned steepest descent with energy feedback. A preconditioning matrix is build
     #    up according to the BFGS algorithm. The initial Hessian is a diagonal matrix where the
     #    diagonal elements are the inverse of the step size. This method is usually the most efficient
     #    one.
     #
     #     - PBFGS Same as BFGS except that an initial Hessian is obtained from a force field. Force field
     #     parameters are only available for systems consisting of H,C,N,O. For such systems the method
     #     is the most efficient one in general
     #
     #    - FIRE The Fast Inertial Relaxation Engine as described by Bitzek et al.[1] with optimized
     #    parameters. An additional line is required in the input.geopt file with two parameters
     #    initial time step dtinit and the maximum time step dtmax.
     ###    A good starting point to estimate dtmax is by using dtmax=0.25 pi sqrt(betax_(VSSD)) and
     #    dtinit=0.5dtmax, and gradually increasing dtmax. betax is not used.

     #    - AB6MD The molecular dynamic routines from ABINIT 6.
     #
     #    - DIIS a Direct Inversion of Iterative Subspace. In that case, an additional parameter is required
     #    qqwith the history length (default is 4) on the line of betax.
   method:
     COMMENT: Geometry optimisation method
     EXCLUSIVE:
       none:   No geometry optimization
       SDCG:   A combination of Steepest Descent and Conjugate Gradient
       VSSD:   Variable Stepsize Steepest Descent method
       LBFGS:  Limited-memory BFGS
       BFGS:   Broyden-Fletcher-Goldfarb-Shanno
       PBFGS:  Same as BFGS with an initial Hessian obtained from a force field
       AB6MD:  Molecular dynamics from ABINIT
       DIIS:   Direct inversion of iterative subspace
       FIRE:   Fast Inertial Relaxation Engine as described by Bitzek et al.
       SOCK:   Socket communication
       NEB:    Nudged Elastic Band
       SBFGS:  SQNM minimizer, keyword deprecated, will be replaced by SQNM in future release
       SQNM:   Stabilized quasi-Newton minimzer
       MD: Molecular dynamics, NVT (Nose-Hoover Chains) or NVE ensemble
       LOOP:   Do nothing except looping, forces should be changed externally
     default: none
   ncount_cluster_x:
     COMMENT: Maximum number of force evaluations
     DESCRIPTION: |
       Maximum number of force evaluations to be used for the geometry optimization.
     RANGE: [0, 2000]
     PROFILE_FROM: method
     default: 50
     none: 1
   sockinet:
     COMMENT: Socket either unix (0) or tcp (1)
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SOCK
     RANGE: [0, 1]
     default: 1
   sockport:
     COMMENT: Socket port number
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SOCK
     RANGE: [0, 100000]
     default: 2121
   sockhost:
     COMMENT: Socket host name
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SOCK
     default: 127.0.0.1
   frac_fluct:
     COMMENT: Fraction of force fluctuations. Stop if fmax < forces_fluct*frac_fluct
     DESCRIPTION: |
       Convergence criteria for the geometry optimization.

       The geometry optimization stops either if the norm of the individual forces acting on any atom in the
       system is smaller than forcemax or if the forces get noisy.
       Noise is present because of the underlying integration grid. The parameter frac_fluct specifies how
       small the forces should become compared to the noise level to stop the geometry optimization.

       Values in between 1 and 10 is are reasonable for this parameter. A value of 2 means that the geometry
       optimization will stop when the largest atomic force is comparable to the 2 times the average noise
       in the forces themselves.
       For values of frac_fluct smaller than 1 one can under certain circumstances obtain better relaxed
       geometries but one risks that the geometry optimization will not converge since the forces are too
       noisy.

       In such a case one should closely monitor the progress of the geometry optimization by looking at the
       posout. files which are written at each step of the geometry optimization and at the data/geopt.mon
       file.
     RANGE: [0., 10.]
     default: 1.
   forcemax:
     COMMENT: Max forces criterion when stop
     DESCRIPTION: |
       Convergence criteria for the geometry optimization.

       The geometry optimization stops either if the norm of the individual forces acting on any atom in the
       system is smaller than forcemax or if the forces get noisy.
       Noise is present because of the underlying integration grid. The parameter frac_fluct specifies how
       small the forces should become compared to the noise level to stop the geometry optimization.

       Values in between 1 and 10 is are reasonable for this parameter. A value of 2 means that the geometry
       optimization will stop when the largest atomic force is comparable to the 2 times the average noise
       in the forces themselves.
       For values of frac_fluct smaller than 1 one can under certain circumstances obtain better relaxed
       geometries but one risks that the geometry optimization will not converge since the forces are too
       noisy.

       In such a case one should closely monitor the progress of the geometry optimization by looking at the
       posout. files which are written at each step of the geometry optimization and at the data/geopt.mon
       file.
     RANGE: [0., 10.]
     PROFILE_FROM: method
     default: 0.
     NEB: 5e-3
   randdis:
     COMMENT: Random displacement amplitude
     DESCRIPTION: |
       This parameter allows to add random displacements with amplitude randdis to the atomic positions in
       the input file posinp.

       This can for instance be useful to break degeneracies (which would lead to convergence problems in
       the wavefunction optimization) in highly symmetric structures.
     RANGE: [0., 10.]
     default: 0.
   betax:
     COMMENT: Stepsize for the geometry optimization
     DESCRIPTION: |
       This is the stepsize for the geometry optimization.

       This stepsize is system dependent and it has therefore to be determined for each system.
       If the VSSD method is used one can start with a small stepsize of around 1 and VSSD will suggest then
       a better value for {betax} in the last line of the data/geopt.mon file. Whether the stepsize is correct
       can also be seen from the data/geopt.mon output of the SDCG method.

       In this case the average stepsize in terms of betax should be around 4 (after a brief initial period
       where it is around 8).
       In contrast to the SDCG method, the BFGS method is not very sensitive to the correct stepsize but
       nevertheless one should try to find reasonable values also in this case.

       SQNM: For many systems 1 is a good stepsize. Some systems can be minimized more efficiently with
       a larger stepsize.
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SDCG
       - VSSD
       - LBFGS
       - BFGS
       - PBFGS
       - DIIS
       - FIRE
       - NEB
       - SBFGS
       - SQNM
       - none
     PROFILE_FROM: method
     RANGE: [0., 100.]
     default: 4.
     DIIS: 2.
     NEB: 0.5
   history:
     COMMENT: History for DIIS method
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - DIIS
     RANGE: [0, 100]
     default: 4
   dtinit:
     COMMENT: Initial time step for the FIRE method
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - FIRE
     RANGE: [0, 1e4]
     default: 0.75
   dtmax:
     COMMENT: Maximal time step for the FIRE method
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - FIRE
     RANGE: [0, 1e4]
     default: 1.5
   nhistx:
     COMMENT: Maximum history length
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SBFGS
       - SQNM
     RANGE: [0, 1000]
     default: 10
   biomode:
     COMMENT: Enable mode for biomolecules.
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SBFGS
       - SQNM
     default: No
   beta_stretchx:
     COMMENT: Stepsize for steepest descent in stretching mode direction (only if in biomode)
     RANGE: [0., 100.]
     default: 5e-1
   maxrise:
     COMMENT: Maximum allowed rise in energy in one geopt step
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SBFGS
       - SQNM
     RANGE: [0., 1e10]
     default: 1e-6
   cutoffratio:
     COMMENT: If ratio of eigenvalues of displacement overlapmatrix is smaller than cutoffratio, the corresponding directions are not used
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SBFGS
       - SQNM
     RANGE: [0., 1.]
     default: 1e-4
   steepthresh:
     COMMENT: If fmax < steepthresh, geopt method uses steepest descent
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SBFGS
       - SQNM
     RANGE: [0., 1e10]
     default: 0.1
   trustr:
     COMMENT: Maximum displacement of single atom
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - SBFGS
       - SQNM
     RANGE: [0., 1e10]
     default: 0.5
   ionmov:
     COMMENT: Movement ion method
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - AB6MD
     EXCLUSIVE:
       6:  Simple velocity-Verlet molecular dynamic
       7:  Quenched molecular dynamic
       8:  Nose-Hoover thermostat
       9:  Langevin dynamic
       12: Isokinetic ensemble molecular dynamics
       13: Iosthermal/isenthalpic ensemble
     default: 6
   dtion:
     COMMENT: Time step - Atomic Units (20.670689 AU=0.5 fs)
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - AB6MD
     RANGE: [0, 1e3]
     default: 20.670689
   mditemp:
     COMMENT: Temperature of molecular dynamics
     CONDITION:
       MASTER_KEY: ionmov
       WHEN: [6, 8, 9, 12, 13]
#       - 6
     RANGE: [0, 1e9]
     default: 300.
   mdftemp:
     COMMENT: Final temperature of molecular dynamics
     CONDITION:
       MASTER_KEY: ionmov
       WHEN: [8, 9, 12, 13]
     RANGE: [0, 1e9]
     default: 300.
   noseinert:
     COMMENT: Thermostat inertia coefficient for Nose_Hoover dynamics
     CONDITION:
       MASTER_KEY: ionmov
       WHEN:
       - 8
     RANGE: [0, 1e9]
     default: 1e5
   friction:
     COMMENT: Friction coefficient for Langevin dynamics
     CONDITION:
       MASTER_KEY: ionmov
       WHEN:
       - 9
     RANGE: [0, 1e5]
     default: 1e-3
   mdwall:
     COMMENT: Distance in bohr where atoms can bounce for Langevin dynamics
     CONDITION:
       MASTER_KEY: ionmov
       WHEN:
       - 9
     RANGE: [0, 1e5]
     default: 1e4
   qmass:
     COMMENT: Mass of each thermostat (isothermal/isenthalpic ensemble)
     CONDITION:
       MASTER_KEY: ionmov
       WHEN:
       - 13
     RANGE: [0, 1e9]
     default:
     - 0.
   bmass:
     COMMENT: Barostat masses (isothermal/isenthalpic ensemble)
     CONDITION:
       MASTER_KEY: ionmov
       WHEN:
       - 13
     RANGE: [0, 1e9]
     default: 10.
   vmass:
     COMMENT: Barostat masses (isothermal/isenthalpic ensemble)
     CONDITION:
       MASTER_KEY: ionmov
       WHEN:
       - 13
     RANGE: [0, 1e9]
     default: 1.
   climbing:
     COMMENT: Make the highest energy image to climb along the path
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - NEB
     default: No
   extrema_opt:
     COMMENT: Minimize the energy of extremum images during NEB optimization
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - NEB
     default: No
   neb_method:
     COMMENT: Image minimization method
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - NEB
     EXCLUSIVE:
       steepest_descent: steepest descent
       fletcher-reeves: Fletcher Reeves
       polak-ribiere: Polak Ribiere
       quick-min: Conjugate gradient
       damped-verlet: Verlet with damp
       sim-annealing: Simulation of annealing
     default: quick-min
   temp:
     COMMENT: Temperature for simulated annealing
     RANGE: [0.,1000.]
     default: 0.
     CONDITION:
       MASTER_KEY: neb_method
       WHEN:
       - sim-annealing
   damp:
     COMMENT: Damping factor
     RANGE: [0.,1000.]
     default: 1.
     CONDITION:
       MASTER_KEY: neb_method
       WHEN:
       - damped-verlet
   springs_k:
     COMMENT: Maximum and minimum value when changing spring constant during optimization
     RANGE: [0.,1000.]
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - NEB
     default: [0.05,0.1]
   fix_tol:
     COMMENT: Tolerance to apply on atom moves between extrema
     RANGE: [0,100]
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - NEB
     default: 1e-4
   nimg:
     COMMENT: Number of images
     RANGE: [3,100]
     CONDITION:
       MASTER_KEY: method
       WHEN:
       - NEB
     default: 15
#Molecular Dynamics (BigDFT)
 md:
   DESCRIPTION: Molecular dynamics parameters
   mdsteps:
     COMMENT: Number of MD steps
     DESCRIPTION: A value greater than 0 will activate molecular dynamics
     RANGE: [0, .inf ]
     default: 0
   print_frequency:
     COMMENT: Printing frequency for energy.dat and Trajectory.xyz files
     RANGE: [1, 999999]
     default: 1
   temperature:
     COMMENT: Initial temperature in Kelvin
     RANGE: [0, 9999999.0]
     default: 300.d0
   timestep:
     COMMENT: Time step for integration (in a.u.)
     RANGE: [0, 99999.0]
     default: 20.d0
   no_translation:
     COMMENT: Logical input to set translational correction
     default: No
   thermostat:
     COMMENT: Activates a thermostat for MD
     EXCLUSIVE:
       none: no thermostat
       nose_hoover_chain: Nose-Hoover Chain thermostat
     default: none
   nose_chain_length:
     COMMENT: Length of the Nose-Hoover Chains (integer input)
     RANGE: [2, 10]
     CONDITION:
       MASTER_KEY: thermostat
       WHEN:
       - nose_hoover_chain
     default: 3
   nose_mts_size:
     COMMENT: Multiple time steps used to integrate Nose-Hoover Chains equations of motion (integer input)
     RANGE: [1, 10]
     CONDITION:
       MASTER_KEY: thermostat
       WHEN:
       - nose_hoover_chain
     default: 1
   nose_yoshida_factor:
     COMMENT: Yoshida-Suzuki order to integrate the Nose-Hoover Chains equations of motion (integer input)
     EXCLUSIVE: [3, 5, 7]
     CONDITION:
       MASTER_KEY: thermostat
       WHEN:
       - nose_hoover_chain
     default: 7
   nose_frequency:
     COMMENT: Frequency in (cm^-1) corresponding to the inertia of the thermostat degrees of freedom
     RANGE: [1., .inf ]
     CONDITION:
       MASTER_KEY: thermostat
       WHEN:
       - nose_hoover_chain
     default: 3000.0
   wavefunction_extrapolation:
     COMMENT: Activates the wavefunction extrapolation for MD
     DESCRIPTION: A value greater than 0 activates wfn extrapolation
     EXCLUSIVE: [ 0, 1, 2, 4 ]
     default: 0
   always_from_scratch:
     COMMENT: When true, always restart wavefunctions from scratch to eliminate dissipation effects
     default: No
   restart_nose:
     COMMENT: Restart Nose Hoover Chain information from md.restart
     default: No
   restart_pos:
     COMMENT: Restart nuclear position information from md.restart
     default: No
   restart_vel:
     COMMENT: Restart nuclear velocities information from md.restart
     default: No
#Mixing parameters (do diagonalisation scheme instead of direct minimisation one)
 mix:
   DESCRIPTION: |
     This file contains all the parameters required to use a density (or potential)
     mixing scheme for the self consistent field loop, which may imply a smearing
     of the occupancies for finite temperature DFT calculations.
     It was the former input.mix.
   iscf:
     COMMENT: Mixing scheme (default=0 i.e. direct minimization)
     DESCRIPTION: |
       An integer giving the mixing scheme and the mixing target.
       It follows the ABINIT convention. For values lower than 10, the potential is mixed, while
       for values greater than 10, the density is mixed. A recommended option is Pulay mixing
       (7 or 17 for potential or charge mixing, respectively)
     EXCLUSIVE:
       -1: Reserved, do not use it.
       0:  Direct minimization
       1:  Get the largest eigenvalue of the SCF cycle
       2:  Simple mixing of the potential
       3:  Anderson mixing of the potential
       4:  Anderson mixing of the potential based on the two previous iterations
       5:  CG based on the minim. of the energy with respect to the potential
       7:  Pulay mixing of the potential based on npulayit previous iterations
       12: Simple mixing of the density
       13: Anderson mixing of the density
       14: Anderson mixing of the density based on the two previous iterations
       15: CG based on the minim. of the energy with respect to the density
       17: Pulay mixing of the density
     default: 0
   itrpmax:
     COMMENT: Maximum number of diagonalisation iterations
     DESCRIPTION: >
       Maximum number of repeats for the mixing scheme. Each iteration implies an optimization
       of the wavefunctions at constant potential according to the settings in input.dft.
     RANGE: [0, 10000]
     default: 1
   rpnrm_cv:
     COMMENT: Stop criterion on the residue of potential or density
     DESCRIPTION: >
       The stop criterion on the residue of the potential or the density. Typical values are in
       the order of 1e-10 to 1e-12.
     RANGE: [0., 10.]
     default: 1.e-4
   norbsempty:
     COMMENT: No. of additional bands
     DESCRIPTION: |
       The maximum number of additional (initially unoccupied) bands considered.
       If a larger value is given, The maximum of orbitals available via the input guess
       procedure will be used automatically
     RANGE: [0, 10000]
     default: 0
   tel:
     COMMENT: Electronic temperature
     DESCRIPTION: |
       The electronic temperature in energy units (Ha).
     RANGE: [0., 1e6]
     default: 0.
   occopt:
     COMMENT: Smearing method
     DESCRIPTION: |
       The smearing function to determine the occupation. The conventions differ from those
       used by ABINIT. 1 = Gaussian, 2 = Fermi, 3 = Marzari (bumb minimization), 4 = Marzari
       (monotonic tail), 5 = Methfessel and Paxton.
     EXCLUSIVE:
       1: Error function smearing
       2: Normal Fermi distribution
       3: Marzari cold smearing a=-.5634 (bumb minimization)
       4: Marzari cold smearing with a=-.8165 (monotonic tail)
       5: Methfessel and Paxton (same as cold with a=0)
     default: 1
   alphamix:
     COMMENT: Multiplying factors for the mixing
     DESCRIPTION: |
       The closer this value gets to one, the more cautious will be the mixing of the charge or potential.
       In the case of straight mixing, it corresponds to alpha according to
       rho_{new} <-- alpha rho_{old} + (1-alpha) - rho_{new}
       alphamix must be larger than one half.
       A typical choice for metals is 0.95.
     RANGE: [0, 1.]
     default: 0.
   alphadiis:
     COMMENT: Multiplying factors for the electronic DIIS
     DESCRIPTION: |
       The DIIS multiplier used for preconditioning the wavefunctions at constant potential.
     RANGE: [0., 10.]
     default: 2.

#Self-Interaction Correction
 sic:
   DESCRIPTION: Self-Interaction Correction parameters
   sic_approach:
     COMMENT: SIC (self-interaction correction) method
     EXCLUSIVE:
       none: No self-interaction correction
       PZ:   Perdew-Zunger SIC scheme
       NK:   Non-Koopmans correction (Experimental)
     default: none
   sic_alpha:
     COMMENT: SIC downscaling parameter
     RANGE: [0, 1.]
     default: 0.
   sic_fref:
     COMMENT: Reference occupation fref (for Non-Koopman case only)
     CONDITION:
       MASTER_KEY: sic_approach
       WHEN:
       - NK
     RANGE: [0., 1.]
     default: 0.
#Time-Dependent DFT parameters
 tddft:
   tddft_approach:
     COMMENT: Time-Dependent DFT method
     EXCLUSIVE:
       none: no tddft post-processing
       TDA: Casida's LR-TDDFT using Tamm-Dancoff Approximation
       full: Full Casida's LR-TDDFT
     default: none
   decompose_perturbation:
     COMMENT: Indicate the directory of the perturbation to be decomposed in the basis of empty states
     default: none
#overall run setup
 mode:
   method:
     COMMENT: Run method of BigDFT call
     EXCLUSIVE:
       dft: Density Functional Theory (BigDFT)
       lj: Lennard-Jones force field
       tdpot: two-dimension test potential
       lensic: Lenosky Force Field for Si clusters
       lensib: Lenosky Force Field for Si bulk
       amber: AMBER Force Fields Package (requires AMBERtools)
       morse_bulk: Morse bulk
       morse_slab: Morse slab
       tersoff: Tersoff potential for C and Si
       alborz: Alireza Ghasemis ALBORZ package
       bmhtf: Born Mayer Huggins Tosi Fumi Potential
       cp2k: CP2K
       dftbp: DFTP+
       sw: Stillinger-Weber for Si
       bazant:  Bazant force for Si
       multi: Mixed approach where parts of the system are treated with different methods
       plugin: Use the signaling procedure profided by FUTILE
     default: dft
   plugin_id:
     COMMENT: Integer handle identifying the calculator associated to the mode plugin
     default: 1
     CONDITION:
       MASTER_KEY: method
       WHEN: plugin
   add_coulomb_force:
     COMMENT: Boolean to add coulomb force on top of any of above selected force
     MASTER_KEY: method
     default: No
   nab_options:
     COMMENT: String to be passed to nab_init compiler in the case of ambertools compilation
     default: ntpr=1
     CONDITION:
       MASTER_KEY: method
       WHEN: amber
   mm_paramset:
     COMMENT: Name of the hard-coded parameter set. Must be compatible to the chosen force field.
     default: default
     CONDITION:
       MASTER_KEY: method
       WHEN: [lj, tdpot, lensic, lensib, amber, morse_bulk, morse_slab, tersoff, bmhtf, cp2k, dftbp]
   mm_paramfile:
     COMMENT: Name of parameter or input file for the selected method or code
     default: none
     CONDITION:
       MASTER_KEY: method
       WHEN: [lj, tdpot, lensic, lensib, amber, morse_bulk, morse_slab, tersoff, bmhtf, cp2k, dftbp]
   sections:
     COMMENT: List of labelling subparts to divide the system into
     default: []
     CONDITION:
       MASTER_KEY: method
       WHEN: [multi]
   section_buffer:
     COMMENT: Level of neighbours added to posinp sections
     default: 1
     RANGE: [0, 10]
     CONDITION:
       MASTER_KEY: method
       WHEN: [multi]
   section_passivation:
     COMMENT: Level of neighbours added to posinp sections
     default: Yes
     CONDITION:
       MASTER_KEY: method
       WHEN: [multi]
   sw_eqfactor:
     COMMENT: Factor on sigma value, rule the equilibrium bond length for the Stillinger-Weber potential
     default: 1.
     PBE_Si: 1.006445672 # 5.465 / 5.430
     LDA_Si: 0.994475138 # 5.400 / 5.430
     CONDITION:
       MASTER_KEY: method
       WHEN: [sw]

#Performance parameters
 perf:
   debug:
     COMMENT: Debug option
     DESCRIPTION: |
       The debug mode is enable mainly for memory profiling.
     default: No
#  profiling_depth:
#     COMMENT: Maximum level of the profiling for the tracking of the routines
#     default: -1
   fftcache:
     COMMENT: Cache size for the FFT
     DESCRIPTION: |
       Specify the cache size for FFT in kBytes.
     default: 8192
   accel:
     COMMENT: Acceleration (hardware)
     DESCRIPTION: |
       Specify the use of CUDA (resp. OCL) versions of various subroutines. For CUDA,
       a GPU.config file is needed.
     EXCLUSIVE:
       NO:      No material acceleration
       CUDAGPU: CUDA
       OCLGPU:  OpenCL on GPU
       OCLCPU:  OpenCL on CPU
       OCLACC:  ???
     default:   NO
   ocl_platform:
     COMMENT: Chosen OCL platform
     default: ~
   ocl_devices:
     COMMENT: Chosen OCL devices
     default: ~
   blas:
     COMMENT: CUBLAS acceleration
     DESCRIPTION: |
        Use or not the CUBlas acceleration.
     default: No
   projrad:
     COMMENT: Radius of the projector as a function of the maxrad
     RANGE: [0., 100.]
     default: 15.
   exctxpar:
     COMMENT: Exact exchange parallelisation scheme
     EXCLUSIVE:
       BC: Blocking Collective
       OP2P: Overlap Point-to-Point
     default: OP2P
   ig_diag:
     COMMENT: Input guess (T=Direct, F=Iterative) diag. of Ham.
     default: Yes
   ig_norbp:
     COMMENT: Input guess Orbitals per process for iterative diag.
     RANGE: [1, 1000]
     default: 5
   ig_blocks:
     COMMENT: Input guess Block sizes for orthonormalisation
     RANGE: [1, 100000]
     default: [300, 800]
   ig_tol:
     COMMENT: Input guess Tolerance criterion
     RANGE: [0., 1.]
     default: 1.0e-4
   methortho:
     COMMENT: Orthogonalisation
     EXCLUSIVE:
       0: Cholesky
       1: Gram-Schmidt/Cholesky
       2: Loewdin
     default: 0
   rho_commun:
     COMMENT: Density communication scheme (DBL, RSC, MIX)
     default: DEF
   unblock_comms:
     COMMENT: Overlap Communications of fields (OFF,DEN,POT)
     EXCLUSIVE:
       OFF: Synchronous run
       DEN: ???
       POT: ???
     default: OFF
   linear:
     COMMENT: Linear Input Guess approach
     EXCLUSIVE:
       OFF: ???
       LIG: ???
       FUL: ???
       TMO: ???
     default: OFF
   tolsym:
     COMMENT: Tolerance for symmetry detection
     RANGE: [0., 1.]
     default: 1.0e-8
   signaling:
     COMMENT: Expose calculation results on Network
     default: No
   signaltimeout:
     COMMENT: Time out on startup for signal connection (in seconds)
     RANGE: [-1, 3600]
     default: 0
   domain:
     COMMENT: Domain to add to the hostname to find the IP
     default: ~
   inguess_geopt:
     COMMENT: Input guess to be used during the optimization
     EXCLUSIVE:
       0: Wavelet input guess
       1: Real space input guess
     default: 0
   store_index:
     COMMENT: Store indices or recalculate them for linear scaling
     default: Yes
   psp_onfly:
     COMMENT: Calculate pseudopotential projectors on the fly
     default: Yes
   multipole_preserving:
     COMMENT: (EXPERIMENTAL) Preserve the multipole moment of the ionic density
     default: No
   mp_isf:
     COMMENT: (EXPERIMENTAL) Interpolating scaling function or lifted dual order for the multipole preserving
     default: 16
   mixing_after_inputguess:
     COMMENT: Mixing step after linear input guess
     EXCLUSIVE:
       0: keep the initial input guess density
       1: perform a mixing step with the default mixing parameter
       2: keep the new density, completely neglecting the input guess density
     default: 1
   iterative_orthogonalization:
     COMMENT: Iterative_orthogonalization for input guess orbitals
     default: No
   check_sumrho:
     COMMENT: Enables linear sumrho check
     default: 1
     EXCLUSIVE:
       0: No check
       1: Light check
       2: Full check
   check_overlap:
     COMMENT: Enables linear overlap check
     default: 1
     EXCLUSIVE:
       0: No check
       1: Light check
       2: Full check
   experimental_mode:
     COMMENT: Activate the experimental mode in linear scaling
     default: No
   explicit_locregcenters:
     COMMENT: Linear scaling explicitly specify localization centers
     default: No
   calculate_KS_residue:
     COMMENT: Linear scaling calculate Kohn-Sham residue
     default: Yes
   intermediate_forces:
     COMMENT: Linear scaling calculate intermediate forces
     default: No
   kappa_conv:
     COMMENT: Exit kappa for extended input guess (experimental mode)
     default: 0.1
   calculate_gap:
     COMMENT: Linear scaling calculate the HOMO LUMO gap
     default: No
   loewdin_charge_analysis:
     COMMENT: Linear scaling perform a Loewdin charge analysis at the end of the calculation
     default: No
   coeff_weight_analysis:
     COMMENT: Linear scaling perform a Loewdin charge analysis of the coefficients for fragment calculations
     default: No
   check_matrix_compression:
     COMMENT: Linear scaling perform a check of the matrix compression routines
     default: Yes
   correction_co_contra:
     COMMENT: Linear scaling correction covariant / contravariant gradient
     default: Yes
   FOE_restart:
     COMMENT: Restart method to be used for the FOE method
     EXCLUSVE:
       0: AO
       1: REFORMAT
     default: 0
     ao: 0
     reformat: 1
   imethod_overlap:
     COMMENT: Method to calculate the overlap matrices (1=old, 2=new)
     EXCLUSIVE:
       1: old
       2: new
     default: 1
   enable_matrix_taskgroups:
     COMMENT: Enable the matrix taskgroups
     default: True
   hamapp_radius_incr:
     COMMENT: Radius enlargement for the Hamiltonian application (in grid points)
     default: 8
     RANGE: [0,8]
   adjust_kernel_iterations:
     COMMENT: Enable the adaptive ajustment of the number of kernel iterations
     default: True
   adjust_kernel_threshold:
     COMMENT: Enable the adaptive ajustment of the kernel convergence threshold according to the support function convergence
     default: True
   wf_extent_analysis:
     COMMENT: Perform an analysis of the extent of the support functions (and possibly KS orbitals)
     default: False
   foe_gap:
     COMMENT: Use the FOE method to calculate the HOMO-LUMO gap at the end of a calculation
     default: False
 lin_general:
     hybrid:
       COMMENT: Activate the hybrid mode; if activated, only the low accuracy values will be relevant
       default: No
     nit:
       COMMENT: Number of iteration with low/high accuracy
       DESCRIPTION: |
         Maximal number of outer loop iterations (high / low accuracy).
         In each iteration both the support function and the kernel are optimized.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [0,1000]
       PROFILE_FROM: hybrid
       default: [100,100]
       Yes: [100, 1]
     rpnrm_cv:
       COMMENT: Convergence criterion for low/high accuracy
       DESCRIPTION: |
         Convergence criterion for the outer loop iterations (high / low accuracy).
         The optimization stops if the mean change of the charge density / potential falls below this threshold.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [1.e-15,1.e-5]
       default: [1.e-12,1.e-12]
     conf_damping:
       COMMENT: How the confinement should be decreased, only relevant for hybrid mode; negative -> automatic
       DESCRIPTION: |
         Prescription how the prefactor for the confining potential should be decreased
         * negative value => automatic adjustment (recommended)
         * positive value => at each iteration the prefactor is multiplied with the specified value
         This variable is only relevant for the hybrid mode.
       RANGE: [-1.0,1.0]
       default: -0.5
     taylor_order:
       COMMENT: Order of the Taylor approximation; 0 -> exact
       DESCRIPTION: |
         Indicates how the matrix powers are calculated:
         * n<0 => Laura's method of order n
         * n=0 => exact calculation
         * n>0 => Taylor series of order n
       RANGE: [-100,10000]
       default: 0
     max_inversion_error:
       COMMENT: Linear scaling maximal error of the Taylor approximations to calculate the inverse of the overlap matrix
       DESCRIPTION: |
         Maximal error of the Taylor approximations which are used to  calculate the inverse of the overlap matrix.
         If this error is larger than the specified value, the order of the Taylor approximation is increased.
         The default value is set very large, such such in this case no automatic adjustment is performed.
       default: 1.d0
       RANGE: [1.e-20,1.0]
     output_wf:
       COMMENT: Output basis functions; 0 no output, 1 formatted output, 2 Fortran bin, 3 ETSF
       DESCRIPTION: |
         Indicates how the support functions should be written to disk at the end of the run:
          *  0 => None
          *  1 => Wavelet, Plain text
          *  2 => Wavelet, Fortran binary
          *  3 => Wavelet, ETSF file format
          * 10 => None
          * 11 => Wavelet and Interpolating Scaling Function (density), Plain text
          * 12 => Wavelet and Interpolating Scaling Function (density), Fortran binary
          * 13 => Wavelet and Interpolating Scaling Function (density), ETSF file format
          * 20 => None
          * 21 => Wavelet and Interpolating Scaling Function (wavefunction), Plain text
          * 22 => Wavelet and Interpolating Scaling Function (wavefunction), Fortran binary
          * 23 => Wavelet and Interpolating Scaling Function (wavefunction), ETSF file format
       default: 0
       EXCLUSIVE:
         0:  None
         1:  Wavelet, Plain text
         2:  Wavelet, Fortran binary
         3:  Wavelet, ETSF file format
         10: None
         11: Wavelet and Interpolating Scaling Function, Plain text
         12: Wavelet and Interpolating Scaling Function, Fortran binary
         13: Wavelet and Interpolating Scaling Function, ETSF file format
         10: None
         11: Wavelet and Interpolating Scaling Function (density), Plain text
         12: Wavelet and Interpolating Scaling Function (density), Fortran binary
         13: Wavelet and Interpolating Scaling Function (density), ETSF file format
         20: None
         21: Wavelet and Interpolating Scaling Function (wavefunction), Plain text
         22: Wavelet and Interpolating Scaling Function (wavefunction), Fortran binary
         23: Wavelet and Interpolating Scaling Function (wavefunction), ETSF file format
     output_mat:
       COMMENT: Output sparse matrices; 0 no output, 1 formatted sparse, 11 formatted dense, 21 formatted both
       DESCRIPTION: |
         Indicates how the support functions should be written to disk at the end of the run:
          *  0 => None
          *  1 => Plain text in sparse format
          * 11 => Plain text in dense format
          * 21 => Plain text in both formats
          *  2 => Fortran binary in sparse format
          * 12 => Fortran binary in dense format
          * 22 => Fortran binary in both formats
          *  4 => MPI native binary in sparse format
       default: 0
       EXCLUSIVE:
         0:  None
         1:  Plain text sparse
         11: Plain text dense
         21: Plain text sparse and dense
         2:  Fortran binary sparse
         12: Fortran binary dense
         22: Fortran binary sparse and dense
         4:  MPI native binary sparse
     output_coeff:
       COMMENT: Output KS coefficients; 0 no output, 1 formatted output
       DESCRIPTION: |
         Indicates how the support functions should be written to disk at the end of the run:
          *  0 => None
          *  1 => Plain text
       default: 0
       EXCLUSIVE:
         0:  None
         1:  Plain text
     output_fragments:
       COMMENT: Output support functions, kernel and coeffs; 0 fragments and full system, 1 fragments only, 2 full system only
       DESCRIPTION: |
         Indicates how the support functions should be written to disk at the end of the run:
          *  0 => Fragments and full system
          *  1 => Fragments only
          *  2 => Full system only
       default: 0
       EXCLUSIVE:
         0:  Fragments and full system
         1:  Fragments only
         2:  Full system only
     kernel_restart_mode:
       COMMENT: Method for restarting kernel; 0 kernel, 1 coefficients, 2 random, 3 diagonal, 4 support function weights
       DESCRIPTION: |
         Indicates how the kernel should be generated for a restart calculation:
          *  0 => Density kernel
          *  1 => Coefficients
          *  2 => Random
          *  3 => Diagonal kernel, i.e. support functions scaled by number of electrons (per fragment)
          *  4 => Support functions weights
       default: 0
       EXCLUSIVE:
         0:  Density kernel
         1:  Coefficients
         2:  Random
         3:  Diagonal kernel
         4:  Support function weights
       #Here follow some shortcuts
       kernel: 0
       coeff: 1
       random: 2
       diag: 3
       weight: 4
     kernel_restart_noise:
       COMMENT: Add random noise to kernel or coefficients when restarting
       DESCRIPTION: |
         Indicates how much noise should be added to kernel or coefficients for a restart calculation
       default: 0.0d0
       RANGE: [0.0,1.0]
     frag_num_neighbours:
       COMMENT: Number of neighbours to output for each fragment
       DESCRIPTION: |
         Indicates how many neighbouring atoms should be written to frag_env.xyz  - only allow for a small number of neighbours
       RANGE: [0,4]
       default: 0
     frag_neighbour_cutoff:
       COMMENT: Number of neighbours to output for each fragment
       DESCRIPTION: |
         Distance (in bohr) beyond which neighbouring atoms are not included in frag_env.xyz
       RANGE: [0,100]
       default: 12.0d0
     cdft_lag_mult_init:
       COMMENT: CDFT initial value for Lagrange multiplier
       DESCRIPTION: |
         The sign is set automatically based on the charge to be constrained
       default: 0.05d0
       RANGE: [0.0,10.0]
     cdft_conv_crit:
       COMMENT: CDFT convergence threshold for the constrained charge
       DESCRIPTION: |
         possible value: 1 positive real number
       default: 1.e-2
       RANGE: [1.e-20,1.0]
     calc_dipole:
       DESCRIPTION: |
         Indicates whether the dipole moment should be calculated after the run or not
       COMMENT: Calculate dipole
       default: No
     calc_quadrupole:
       DESCRIPTION: |
         Indicates whether the quadrupole moment should be calculated after the run or not
       COMMENT: Calculate quadrupole
       default: No
# this name might be misleading
     subspace_diag: #called calc_ks, to be renamed
       COMMENT: Diagonalization at the end
       DESCRIPTION: |
         Indicates whether a diagonalization shall be performed at the end of the run
       default: No
     extra_states:
       COMMENT: Number of extra states to include in support function and kernel optimization (dmin only), must be equal to norbsempty
       default: 0
       RANGE: [0, 10000]
     calculate_onsite_overlap:
       COMMENT: Calculate the onsite overlap matrix (has only an effect if the matrices are all written to disk)
       default: No
     charge_multipoles:
       COMMENT: Calculate the atom-centered multipole coefficients; 0 no, 1 old approach Loewdin, 2 new approach Projector
       DESCRIPTION: |
         Calculate the multipole expansion coefficients of the atomic charge which can then be used to establish a QM/MM coupling.
         Currently only implemented and tested for nspin=1
         Possible values are:
         * 0 => no calculation
                    * 1 => Loewdin approach, however without explicit orthogonalization
                    #* 2 => new approach using simple projector and orthogonalized support functions
                    #* 3 => new approach using full projector and orthogonalized support functions
                    * 11 => Mulliken approach
                    #* 12 => same as 2, but with non-orthogonalized support functions
                    #* 13 => same as 3, but with non-orthogonalized support functions
       default: 0
       EXCLUSIVE:
         0: no calculation
         1: Loewdin approach, however without explicit orthogonalization
         #2: new approach using simple projector and orthogonalized support functions
         #3: new approach using full projector and orthogonalized support functions
         11: Mulliken approach
         #12: same as 2, but with non-orthogonalized support functions
         #13: same as 3, but with non-orthogonalized support functions
     support_function_multipoles:
       COMMENT: Calculate the multipole moments of the support functions
       default: False
     plot_locreg_grids:
       COMMENT: Plot the scaling function and wavelets grid of each localization region
       default: False
     calculate_FOE_eigenvalues:
       COMMENT: First and last eigenvalue to be calculated using the FOE procedure
       default: [0,-1]
     precision_FOE_eigenvalues:
       COMMENT: Decay length of the error function used to extract the eigenvalues (i.e. something like the resolution)
       default: 5.e-3
       RANGE: [0.0,1.e-1]
     #centers_auto:
     #  default: yes
     multipole_centers:
       COMMENT: Determines whether the multipole centers shall be determined automatically (i.e. taking the atoms) or whether they are provided manually
       #default: yes
       default: 0.0
     consider_entropy:
       COMMENT: Indicate whether the entropy contribution to the total energy shall be considered
       default: False
#Parameters for the localised basis set (or support function) for the linear scaling version
 lin_basis:
     nit:
       COMMENT: Maximal number of iterations in the optimization of the support functions
       DESCRIPTION: |
         Maximal number of iterations in the optimization of the support functions.
         The first number is used for the low accuracy part, the second one for the high accuracy part.
         If the hybrid mode is used, only the first value is taken into account.
       RANGE: [0,100]
       default: [4,5]
     nit_ig:
       COMMENT:  maximal number of iterations to optimize the support functions in the extended input guess (experimental mode only)
       RANGE: [0,100]
       default: 50 #just for backward compatibility, should be smaller
     idsx:
       COMMENT: DIIS history for optimization of the support functions (low/high accuracy); 0 -> SD
       DESCRIPTION: |
         Indicates the method with which the support functions are optimized
          * n=0 => steepest descent
          * n>0 => DIIS with history length n
       RANGE: [0,20]
       default: [6,6]
     gnrm_cv:
       COMMENT: Convergence criterion for the optimization of the support functions (low/high accuracy)
       DESCRIPTION: |
         Convergence criterion for optimization of the support functions (high / low accuracy).
         The optimization stops if the mean gradient norm falls below this threshold.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [1.e-6,1.0]
       default: [1.e-2,1.e-4]
     gnrm_ig:
       COMMENT: Convergence criterion for the optimization of the support functions in the extended input guess (experimental mode only)
       RANGE: [1.e-5,10.0]
       default: 1.e-3 #just for backward compatibility, should be larger
     deltae_cv:
       COMMENT: Total relative energy difference to stop the optimization ('experimental_mode' only)
       DESCRIPTION: |
         The optimization of the support functions stops if the total relative gain in the target function
         during the given cycle of support function optimization falls below this threshold
       RANGE: [1.e-6,1.e-1]
       default: 1.e-4
     gnrm_dyn:
       COMMENT: Dynamic convergence criterion ('experimental_mode' only)
       DESCRIPTION: |
         From this value the effective dynamic convergence criterion is calculated by a division by kappa.
         Then the optimization of the support functions stops if the mean gradient norm falls
         below this effective dynamic convergence criterion
         and is at the same time smaller than the value of min_gnrm_for_dynamic.
         The specified value should be approximately 10 times smaller than the value of gnrm_cv.
         This value is only used for the experimental mode.
       RANGE: [1.e-7,1.e-1]
       default: 1.e-4
     min_gnrm_for_dynamic:
       COMMENT: Minimal gnrm to active the dynamic gnrm criterion
       DESCRIPTION: |
         The dynamic convergence criterion (specified by gnrm_dyn) is only active if the mean gradient norm
         of the support functions is below this threshold
       RANGE: [1.e-7,1.0]
       default: 1.e-3
     alpha_diis:
       COMMENT: Multiplicator for DIIS
       DESCRIPTION: |
                    possible value: 2 positive real numbers
                    The support functions gradient is multiplied by this number before being used for the DIIS optimization.
                    The first entry for the low accuracy part, the second one for the high accuracy part.
                    When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [0.1,10]
       default: 1.0
     alpha_sd:
       COMMENT: Initial step size for SD
       DESCRIPTION: |
         The initial step size which is used to optimize the support functions with steepest descent.
         If the specified value is not appropriate, it will be adjusted automatically.
         The first entry is used for the low accuracy part, the second one for the high accuracy part.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [1.e-4,10.0]
       default: 1.0
     nstep_prec:
       COMMENT: Number of iterations in the preconditioner
       DESCRIPTION: |
         Indicates how many iterations in the preconditioning of the gradient shall be performed
       RANGE: [1,30]
       default: 5
     fix_basis:
       COMMENT: Fix the support functions if the density change is below this threshold
       RANGE: [1.e-14,1.e-6]
       default: 1.e-10
     correction_orthoconstraint:
       COMMENT: Correction for the slight non-orthonormality in the orthoconstraint
       DESCRIPTION: |
         Indicates whether the slight non-orthogonality of the support functions
         should be taken into account during the application of the orthogonality constraint
           - 0 => take into account
           - 1 => don't take into account
       default: 1
       RANGE:  [0,1]
     orthogonalize_ao:
       COMMENT: Orthogonalize the atomic orbitals used as input guess
       default: Yes
     reset_DIIS_history:
       COMMENT: Reset the DIIS history when starting the loop which optimizes the support functions
       default: No
 #Parameters for the calculation of the kernel (linear scaling version)
 lin_kernel:
     nstep:
       COMMENT: Number of steps taken when updating the coefficients via direct minimization for each iteration of the density kernel loop
       DESCRIPTION: |
         Indicates the number of steps taken when updating the coefficients
         via direct minimization for each iteration of the density kernel loop.
         The first entry is used for the low accuracy part, the second one for the high accuracy part.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [0,100]
       default: [1,1]
     nit:
       COMMENT: Number of iterations in the (self-consistent) optimization of the density kernel
       DESCRIPTION: |
         Indicates the number of iterations in the (self-consistent) optimization of the density kernel.
         The first entry is used for the low accuracy part, the second one for the high accuracy part.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [0,1000]
       default: [5,5]
     # check whether there are different DIIS histories...
     idsx_coeff:
       COMMENT: DIIS history for direct mininimization
       default: [0,0]
     idsx:
       COMMENT: Mixing method; 0 -> linear mixing, >=1 -> Pulay mixing
       DESCRIPTION: |
         Indicates how the density / potential mixing shall be performed:
         n=0 => linear mixing
         n=1 => Pulay mixing with history length n
         The first entry is used for the low accuracy part, the second one for the high accuracy part.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [0,20]
       default: [0,0]
     alphamix:
       COMMENT: Mixing parameter (low/high accuracy)
       DESCRIPTION: |
         Indicates the mixing parameter used for the mixing of the charge density / potential.
         The larger the value, the more of the previous value will be kept.
         The first entry is used for the low accuracy part, the second one for the high accuracy part.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [0.0,1.0]
       default: [0.5,0.5]
     gnrm_cv_coeff:
       COMMENT: Convergence criterion on the gradient for direct minimization
       DESCRIPTION: |
         Convergence criterion on the gradient for direct minimization.
         The first entry is used for the low accuracy part, the second one for the high accuracy part.
         When the hybrid mode is used, only the first entry is taken into account.
       default: [1.e-5,1.e-5]
     rpnrm_cv:
       COMMENT: Convergence criterion (change in density/potential) for the kernel optimization
       DESCRIPTION: |
         The optimization of the density kernel is stopped as soon as the mean change
         of the charge density / potential between two iterations falls below this threshold.
         The first entry is used for the low accuracy part, the second one for the high accuracy part.
         When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [1.e-14,1.e-5]
       default: [1.e-10,1.e-10]
     linear_method:
       COMMENT: Method to optimize the density kernel
       DESCRIPTION: |
         Indicates the method with which the density kernel is optimized:
         * DIRMIN => direct minimization
         * DIAG => diagonalization with density mixing
         * FOE => Fermi Operator Expansion
         * PEXSI => PEXSI library
       EXCLUSIVE:
         DIRMIN: direct minimization
         DIAG: diagonalization
         FOE: Fermi Operator Expansion
         PEXSI: external PEXSI lbrary
       default: DIAG
     mixing_method:
       COMMENT: Quantity to be mixed
       DESCRIPTION: |
         Indicates which quantity should be used for the mixing procedure:
          DEN => density mixing
          POT => potential mixing
       EXCLUSIVE:
         DEN: density mixing
         POT: potential mixing
       default: DEN
     alpha_sd_coeff:
       COMMENT: Initial step size for SD for direct minimization
       default: 0.2
     alpha_fit_coeff:
       COMMENT: Update the SD step size by fitting a quadratic polynomial
       DESCRIPTION: |
         Update the SD step size by fitting a quadratic polynomial to the energy
         along the direction of the gradient during direct mininimization.
       default: No
     coeff_scaling_factor:
       COMMENT: Factor to scale the gradient in direct minimization
       DESCRIPTION: |
         Specifies a scaling factor for the coefficient gradient, recommended to be around 0.1 - 0.5 for CDFT, fragment calculations
         or systems where convergence is unstable.
       default: 1.0
       RANGE: [0.0,1.e1]
     delta_pnrm:
       COMMENT: Stop the kernel optimization if the density/potential difference has decreased by this factor (deactivated if -1.0)
       DESCRIPTION: |
         stop the kernel optimization if the density/potential difference has decreased by this factor compared to the first iteration.
         The feature is deactivated for a value of -1.0
       default: -1.0
       RANGE: [-1.0,1.0]
#Parameters to define the localized basis set or support functions (linear scaling version)
 lin_basis_params:
     nbasis:
       COMMENT: Number of support functions per atom
       DESCRIPTION: |
                    Indicates the number of support fuctions centered on this atom type. Possible values are:
                     * 1 (s orbital type)
                     * 4 (s,p orbital types)
                     * 9 (s,p,d orbital types)
                     * 16 (s,p,d,f orbital types)
       default: 4
     ao_confinement:
       COMMENT: Prefactor for the input guess confining potential
       DESCRIPTION: |
                    Indicates the prefactor of the confining potential
                    of this atom type which is used to generate the input guess.
       RANGE: [-1.0,10.0]
       default: 8.3e-3
     confinement:
       COMMENT: Prefactor for the confining potential (low/high accuracy)
       DESCRIPTION: |
                    Indicates the prefactor of the confining potential of this atom type.
                    The first entry is used for the low accuracy part, the second one for the high accuracy part.
                    When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [-1.0,10.0]
       default: [8.3e-3,0.0]
     rloc:
       COMMENT: Localization radius for the support functions
       DESCRIPTION: |
                    Indicates the cutoff radius for the support functions.
                    The first entry is used for the low accuracy part, the second one
                    for the high accuracy part; the second value must not be smaller than the first one.
                    When the hybrid mode is used, only the first entry is taken into account.
       RANGE: [2.0,1000.0]
       default: [7.0,7.0]
     rloc_kernel:
       COMMENT: Localization radius for the density kernel
       DESCRIPTION: |
                    Indicates the cutoff radius for the density kernel.
                    Must be at least as large as the support function cutoff
                    plus 8 times the grid spacing; will be adjusted automatically if it is chosen too small.
       RANGE: [2.0,1000.0]
       default: 9.0
     rloc_kernel_foe:
       COMMENT: Cutoff radius for the FOE matrix vector multiplications
       DESCRIPTION: |
                    Indicates the cutoff radius used for the matrix vector multiplications.
                    Must be at least as large as the kernel cutoff.
       RANGE: [2.0,1000]
       default: 14.0
 ## chess:
 ##   ef_interpol_det:
 ##     COMMENT: FOE max determinant of cubic interpolation matrix
 ##     RANGE: [0., 1.]
 ##     default: 1.e-12
 ##   ef_interpol_chargediff:
 ##     COMMENT: FOE max charge difference for interpolation
 ##     RANGE: [0., 1000.]
 ##     default: 1.0
 ##   blocksize_pdsyev:
 ##     COMMENT: SCALAPACK linear scaling blocksize
 ##     default: -8
 ##   pdgemm_blocksize:
 ##     COMMENT: SCALAPACK linear scaling blocksize
 ##     default: -8
 ##   maxproc_pdsyev:
 ##     COMMENT: SCALAPACK linear scaling max num procs
 ##     default: 4
 ##   maxproc_pdgemm:
 ##     COMMENT: SCALAPACK linear scaling max num procs
 ##     default: 4
 ##   evbounds_nsatur:
 ##     COMMENT: Number of FOE cycles before the eigenvalue bounds are shrinked (linear)
 ##     default: 3
 ##   evboundsshrink_nsatur:
 ##     COMMENT: Maximal number of unsuccessful eigenvalue bounds shrinkings
 ##     default: 4
 ##   fscale_lowerbound:
 ##     COMMENT: Linear scaling lower bound for the error function decay length
 ##     RANGE: [1.e-4,1.e-2]
 ##     default: 5.e-3
 ##   fscale_upperbound:
 ##     COMMENT: Linear scaling upper bound for the error function decay length
 ##     default: 5.e-2
 ##     RANGE: [1.e-2,1.0]
 ##   eval_range_foe:
 ##     COMMENT: Lower and upper bound of the eigenvalue spectrum, will be adjusted automatically if chosen unproperly
 ##     DESCRIPTION: |
 ##       Indicates the lower and upper bound of the eigenvalue spectrum which is used for the Fermi Operator Expansion.
 ##       This spectrum will be adjusted automatically if not chosen appropriately.
 ##     RANGE: [-10.0,10.0]
 ##     default: [-0.5,0.5]
 ##   fscale:
 ##     COMMENT: Decay length of the error function
 ##     DESCRIPTION: |
 ##       Indicates the decay length of the error function which is used by the Fermi Operator Expasion to construct the density kernel.
 ##       This value will be adjusted automatically if not chosen appropriately.
 ##     RANGE: [1.e-3,5.e-2]
 ##     default: 2.e-2
 ##   pexsi_npoles:
 ##     COMMENT: Number of poles used by PEXSI
 ##     DESCRIPTION: number of poles used by PEXSI to calculate the density kernel from the Hamiltonian and overlap matrices
 ##     default: 40
 ##     RANGE: [20,200]
 ##   pexsi_mumin:
 ##     COMMENT: Initial guess for the lower bound of the chemical potential used by PEXSI
 ##     DESCRIPTION: |
 ##       Initial guesss for the lower bound of the chemical potential (in hartree)
 ##       used by PEXSI, will be adjusted automatically later.
 ##     default: -1.0
 ##     RANGE: [-5.0,5.0]
 ##   pexsi_mumax:
 ##     COMMENT: Initial guess for the upper bound of the chemical potential used by PEXSI
 ##     DESCRIPTION: initial guesss for the upper bound of the chemical potential (in hartree) used by PEXSI, will be adjusted automatically later
 ##     default: 1.0
 ##     RANGE: [-5.0,5.0]
 ##   pexsi_mu:
 ##     COMMENT: Initial guess for the  chemical potential used by PEXSI
 ##     DESCRIPTION: initial guesss for the chemical potential (in hartree) used by PEXSI, will be adjusted automatically later
 ##     default: 0.5
 ##     RANGE: [-5.0,5.0]
 ##   pexsi_temperature:
 ##     COMMENT: Temperature used by PEXSI
 ##     DESCRIPTION: temperature (in atomic units) used by PEXSI
 ##     default: 1.e-3
 ##     RANGE: [0.0,1.0]
 ##   pexsi_tol_charge:
 ##     COMMENT: Charge tolerance used PEXSI
 ##     DESCRIPTION: tolerance on the number of electrons used by PEXSI
 ##     default: 1.e-3
 ##     RANGE: [1.e-10,1.0]
 ##   pexsi_np_sym_fact:
 ##     COMMENT: Number of tasks for the symbolic factorization used by PEXSI
 ##     DESCRIPTION: Number of tasks used for the symbolic factorization within PEXSI. Too large values can apparently decrease the performance
 ##     default: 16
 ##     RANGE: [1,10000]
--- #here starts the document of possible profiles, that have to be evoked with the 'import' keyword
linear_accurate:
  COMMENT: Appropriate input parameters for a high accuracy linear scaling calculation
  DESCRIPTION: |
          This profile should be chosen if highly accurate energy differences are required.
  dft:
    hgrids: 0.3
    ixc: PBE
    inputpsiid: linear
  chess:
    foe:
      ef_interpol_chargediff: 1.0
  perf:
    experimental_mode: Yes
    correction_co_contra: Yes
    #check_sumrho: 1
    #calculate_KS_residue: No
    #check_matrix_compression: No
  lin_general:
    hybrid: Yes
    taylor_order: 1015
    max_inversion_error: 5.0e-8
  lin_basis:
    nit: 8
    idsx: 8
    gnrm_cv: 1.e-3
    gnrm_dyn: 1.e-4
    deltae_cv: 5.e-5
    min_gnrm_for_dynamic: 2.e-3
    alpha_diis: 0.5
    alpha_sd: 0.5
    nstep_prec: 6
    fix_basis: 1.0e-12
    correction_orthoconstraint: 0
  lin_kernel:
    nit: 4
    idsx: 6
    alphamix: 0.1
    rpnrm_cv: [1.e-12,1.e-12]
    linear_method: FOE
  lin_basis_params:
    ao_confinement: -1.0
    confinement: -1.0
    rloc_kernel: 10.0
    rloc_kernel_foe: 12.0
    H:  {nbasis: 1, rloc: 5.0}
    C:  {nbasis: 4, rloc: 5.5}
    N:  {nbasis: 4, rloc: 5.5}
    O:  {nbasis: 4, rloc: 5.5}
    P:  {nbasis: 4, rloc: 6.0}
    S:  {nbasis: 4, rloc: 6.0}
    Cl: {nbasis: 4, rloc: 6.0}
    Na: {nbasis: 1, rloc: 7.5}
    K:  {nbasis: 1, rloc: 8.0}
    Sn: {nbasis: 4, rloc: 6.5}


linear_moderate:
  COMMENT: Appropriate input parameters for a moderate accuracy linear scaling calculation
  DESCRIPTION: |
          This profile should be chosen if accurate forces are required,
          but there is no need for extremely accurate energies.
  dft:
    hgrids: 0.3
    ixc: PBE
    inputpsiid: linear
  chess:
    foe:
      ef_interpol_chargediff: 1.0
  perf:
    experimental_mode: Yes
    correction_co_contra: Yes
  lin_general:
    hybrid: Yes
    taylor_order: 10
  lin_basis:
    nit: [10,10]
    gnrm_cv: [2.e-3,2.e-3]
    gnrm_dyn: 2.e-4
    deltae_cv: 5.e-5
    min_gnrm_for_dynamic: 4.e-3
    alpha_diis: 0.5
    alpha_sd: 0.5
    nstep_prec: 6
    fix_basis: 1.e-11
    correction_orthoconstraint: 0
  lin_kernel:
    nit: [3,3]
    idsx: [6,6]
    alphamix: [0.2,0.2]
    rpnrm_cv: [1.e-11,1.e-11]
    linear_method: FOE
  lin_basis_params:
    ao_confinement: -1.0
    confinement: -1.0
    rloc_kernel: 10.0
    rloc_kernel_foe: 12.0
    H:  {nbasis: 1, rloc: 5.0}
    C:  {nbasis: 4, rloc: 5.5}
    N:  {nbasis: 4, rloc: 5.5}
    O:  {nbasis: 4, rloc: 5.5}
    P:  {nbasis: 4, rloc: 6.0}
    S:  {nbasis: 4, rloc: 6.0}
    Cl: {nbasis: 4, rloc: 6.0}
    Na: {nbasis: 1, rloc: 7.5}
    K:  {nbasis: 1, rloc: 8.0}
    Sn: {nbasis: 4, rloc: 6.5}


linear_fast:
  COMMENT: Appropriate input parameters for a low accuracy linear scaling calculation
  DESCRIPTION: |
          This profile should be chosen if speed is more important than accuracy.
  dft:
    hgrids: 0.3
    ixc: PBE
    inputpsiid: linear
  perf:
    ef_interpol_chargediff: 1.0
    experimental_mode: Yes
    correction_co_contra: Yes
  lin_general:
    hybrid: Yes
    taylor_order: 10
  lin_basis:
    nit: [10,10]
    gnrm_cv: [4.e-3,4.e-3]
    gnrm_dyn: 4.e-4
    deltae_cv: 5.e-5
    min_gnrm_for_dynamic: 8.e-3
    alpha_diis: 0.5
    alpha_sd: 0.5
    nstep_prec: 6
    fix_basis: 1.e-10
    correction_orthoconstraint: 0
  lin_kernel:
    nit: [10,10]
    idsx: [6,6]
    alphamix: [0.2,0.2]
    rpnrm_cv: [1.e-10,1.e-10]
    linear_method: FOE
  lin_basis_params:
    ao_confinement: -1.0
    confinement: -1.0
    rloc_kernel: 10.0
    rloc_kernel_foe: 12.0
    H:  {nbasis: 1, rloc: 5.0}
    C:  {nbasis: 4, rloc: 5.5}
    N:  {nbasis: 4, rloc: 5.5}
    O:  {nbasis: 4, rloc: 5.5}
    P:  {nbasis: 4, rloc: 6.0}
    S:  {nbasis: 4, rloc: 6.0}
    Cl: {nbasis: 4, rloc: 6.0}
    Na: {nbasis: 1, rloc: 7.5}
    K:  {nbasis: 1, rloc: 8.0}
    Sn: {nbasis: 4, rloc: 6.5}


linear_laura:
 COMMENT: temporary profile, to be merged
 DESCRIPTION: |
           Lauras favourite linear parameters
 dft:
   inputpsiid: linear
 perf:
   check_sumrho: 0 #1
   check_overlap: 0 #1
   experimental_mode: Yes
   calculate_KS_residue: No
   check_matrix_compression: No
   correction_co_contra: Yes
   store_index: Yes
   mixing_after_inputguess: 1
   kappa_conv: 0.1
   FOE_restart: 1
   hamapp_radius_incr: 6
   loewdin_charge_analysis: No
   #profiling_depth: 0
 lin_general:
   hybrid: Yes
   nit: 40 #3 #0
   taylor_order: 1010 #20 #1005 #1010
   max_inversion_error: 1.0e-6
   rpnrm_cv: 1.0e-10 #5.0e-11 #1.0e-10
   output_wf: 1 #21 #22
   output_mat: 11
   #output_fragments: 1 
   calculate_onsite_overlap: Yes
   charge_multipoles: 11
   extra_states: 0
 lin_basis:
   nit: 3 #4 #6
   idsx: 3 #4 #6
   #gnrm_cv: 8.0e-4
   deltae_cv: 1.0e-4
   min_gnrm_for_dynamic: 4.0e-3
   alpha_diis: 0.5
   alpha_sd: 0.5
   nstep_prec: 6
   fix_basis: 1.0e-13
   correction_orthoconstraint: 0
   gnrm_ig: 1.e-1
 lin_kernel:
   #nstep: 10
   nit: 5
   #idsx_coeff: [6, 0]
   idsx: 4
   alphamix: 0.1 #5 #2 #5
   linear_method: FOE
   #eval_range_foe: [-1.0, 1.0]
   #fscale_foe: 5.0E-002 
   #gnrm_cv_coeff: 1.0E-003
   rpnrm_cv: 1.0E-010
   #alphamix: 1.0
 #lin_basis_params:
 #  C:
 #    nbasis: 4
 #    ao_confinement: -1.0
 #    confinement: -1.0
 #    rloc: 7.0 #6.9 
 #    rloc_kernel: 10.0 #14.0 #10.0
 #    rloc_kernel_foe: 10.0 #14.0 #10.0
 #  H:
 #    nbasis: 1
 #    ao_confinement: -1.0
 #    confinement: -1.0
 #    rloc: 7.0 #6.9 
 #    rloc_kernel: 10.0 #14.0 #10.0
 #    rloc_kernel_foe: 10.0 #14.0 #10.0


mixing:
  COMMENT: To be used for metallic systems
  DESCRIPTION: |
           Parameters for the mixing scheme associated to the diagonalization method.
  dft:
   gnrm_cv: 1.e-6
   nrepmax: 1
   itermax: 3
   ncong: 5
   idsx: 0
  mix:
   iscf: 17
   itrpmax: 200
   rpnrm_cv: 1.E-12
   norbsempty: 120
   tel: 0.01
   alphamix: 0.8
   alphadiis: 1.d0


linear:
 COMMENT: Linear parameters sufficient for PDoS, charge analysis, MD
 DESCRIPTION: |
         Basic parameters to perform a linear calculation.
 dft:
   disablesym: Yes
   inputpsiid: linear
 chess:
   foe:
     ef_interpol_chargediff: 1.0
     eval_range_foe: [-1.0, 1.0]
     fscale: 5.0e-2
 perf:
   check_sumrho: 1
   check_overlap: 1
   experimental_mode: Yes
   calculate_KS_residue: No
   check_matrix_compression: No
   correction_co_contra: Yes
   store_index: No
   mixing_after_inputguess: 0
   kappa_conv: 0.1
   FOE_restart: 1
   hamapp_radius_incr: 6
 lin_general:
   hybrid: Yes
   nit: 50
   taylor_order: 1020
   max_inversion_error: 5.0e-8
   rpnrm_cv: 1.0e-11
   output_mat: 1
   output_coeff: 0
   charge_multipoles: 11
 lin_basis:
   nit: 8
   idsx: 8 #LG: would'n be better to put, say, 4?
   gnrm_cv: 2.0e-3
   deltae_cv: 1.0e-4
   min_gnrm_for_dynamic: 4.0e-3
   alpha_diis: 0.5
   alpha_sd: 0.5
   nstep_prec: 6
   fix_basis: 1.0e-12
   correction_orthoconstraint: 0
   gnrm_ig: 1.e-1
   reset_DIIS_history: yes
 lin_kernel:
   nstep: 10
   nit: 6
   idsx_coeff: [6, 0]
   idsx: 6
   rpnrm_cv: 1.0e-8
   alphamix: 0.1
   linear_method: FOE
   delta_pnrm: 0.1
 lin_basis_params:
   ao_confinement: -1.0
   confinement: -1.0
   rloc_kernel: 10.0
   rloc_kernel_foe: 12.0
   H:  {nbasis: 1, rloc: 5.0}
   Li: {nbasis: 1, rloc: 5.5}
   C:  {nbasis: 4, rloc: 5.5}
   N:  {nbasis: 4, rloc: 5.5}
   O:  {nbasis: 4, rloc: 5.5}
   F:  {nbasis: 4, rloc: 5.5}
   P:  {nbasis: 4, rloc: 6.0}
   S:  {nbasis: 4, rloc: 6.0}
   Cl: {nbasis: 4, rloc: 6.0}
   Na: {nbasis: 1, rloc: 7.5}
   K:  {nbasis: 1, rloc: 8.0}
   Sn: {nbasis: 4, rloc: 6.5}
   Fe: {nbasis: 13, rloc: 8.0}
   Cu: {nbasis: 9, rloc: 7.0}
   W:  {nbasis: 9, rloc: 7.5}
 ig_occupation:
   Fe:
     3s: 2.0
     3p: 6.0
     3d:
       up: 4.0
       down: 2.0
     4s: 2.0
     4p: 0.0
   Cu:
     3d: 10.0
     4s: 1.0
     4p: 0.0
   W:
     6s: 2.0
     5d: 4.0
     6p: 0.0


linear_fragments:
  COMMENT: Input parameters to be added to the linear profile for fragment calculationn (templates ready)
  #import: linear #to be tested
  dft:
    inputpsiid: linear_restart
  lin_general:
    hybrid: No
    nit: 1
    output_wf: 0
    output_mat: 0
  lin_kernel:
    nit: 100 #here it is better to put a large value
    rpnrm_cv: [5.0E-08, 1.0E-9]
  lin_basis: {nit: 1}
  perf:
    experimental_mode: No
    adjust_kernel_threshold: No
    adjust_kernel_iterations: No


md:
  COMMENT: Molecular dynamics input parameters for H2O molecules
  geopt:
    method: AB6MD
    ionmov: 8
    dtion: 20.0
    noseinert: 30.0
