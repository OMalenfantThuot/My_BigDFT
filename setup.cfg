[metadata]
name = MyBigDFT
version = 0.1dev
description = My BigDFT Python wrapper
long_description = file: README.md
url = https://gitlab.com/mmoriniere/MyBigDFT.git
author = Maxime MoriniÃ¨re
license = MIT
keywords = DFT, BigDFT
classifiers =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Science/Research
    Intended Audience :: Education
    Topic :: Scientific/Engineering :: Physics
    Topic :: Education
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7

[options]
packages = mybigdft
install_requires =
    oyaml  # instead of pyyaml, mainly to keep the key order of dumped Logfiles
    numpy
setup_requires = 
    setuptools >= 30.3

[options.extras_require]
test =
    numpy >= 1.14  # use the new printing style for tests
    pytest
    pytest-cov
    pytest-html
    pytest-sugar
    pytest-xdist
    pytest-flake8
    tox
doc =
    sphinx
    sphinx_rtd_theme
    jupyter_client
    ipython
    ipykernel
    nbsphinx
    m2r

[options.package_data]
data_file = 
    tests/log.yaml
# mpl_style = 
#     siegpy*SiegPy.mplstyle

[aliases]
test = test

[tool:pytest]
addopts =
    # create an html report for code coverage
    --cov-report html  
    # report the missing lines
    --cov-report term-missing  
    --cov=mybigdft
    # perform the doctests
    --doctest-modules  
    # maximal verbosity
    -vv
    # start with last failed tests and continue with all other tests
    --ff
    # number of tests failed before pytest stops
    # --maxfail=1
    # Disable the capturing of prints
    -s
    # create a pytest html report
    --html=pytest_report.html  
    # runs the tests on two procs
    # -n 2
    # tests PEP8 compliance
    --flake8
    # show local
    -l
# Uncomment the following lines when using flake8 with pytest
flake8-ignore = 
    tests/test*py ALL
    .egg* ALL
    # siegpy/__init__.py ALL
    # doc/conf.py ALL

[coverage:run]
omit = 
    setup.py
    tests/*py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines = 
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't test the representations:
    def __repr__
    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

[flake8]
exclude = 
    tests
    __init__.py
    # doc/conf.py
    htmlcov
    doc
    assets
    __pycache__
    *.egg*
    .tox
    .cache
    .git
ignore =
    E226  # whitespace around operators
    E741  # ambiguous variable names
    W503  # linebreak before operators
